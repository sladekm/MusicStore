@model MusicStore.ViewModels.Account.AccountLoginVM

@{
    ViewData["Title"] = "Login";
}

<h1>Login</h1>
<hr />
<div class="row">
    <div class="col-md-6">
        <h4>Local account login</h4>
        <hr />
        <form asp-action="Login">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input asp-for="ReturnUrl" type="hidden" />
            <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Password" class="control-label"></label>
                <input asp-for="Password" class="form-control" />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="RememberMe" /> @Html.DisplayNameFor(model => model.RememberMe)
                </label>
            </div>
            <div class="form-group">
                <input type="submit" value="Login" class="btn btn-primary" />
            </div>
        </form>
    </div>
    <div class="col-md-6">
        <h4>External login</h4>
        <hr />
        @{ 
            if (Model.ExternalLogins.Count == 0)
            {
                <div>No external login services configured</div>
            }
            else
            {
                <form asp-action="ExternalLogin" asp-route-returnurl="@Model.ReturnUrl">
                    <div>
                        @foreach (var provider in Model.ExternalLogins)
                        {
                            <input type="submit" name="provider" title="Login using your @provider.DisplayName accoount" value="@provider.Name" class="btn btn-primary" />
                        }
                    </div>
                </form>
            }
        }
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
