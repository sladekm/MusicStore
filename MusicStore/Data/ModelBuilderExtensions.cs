using Microsoft.EntityFrameworkCore;
using MusicStore.Models;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

namespace MusicStore.Data
{
    public static class ModelBuilderExtensions
    {
        public static void Seed(this ModelBuilder builder)
        {
            var genres = new List<Genre>
            {
                new Genre { Name = "Rock" },
                new Genre { Name = "Jazz" },
                new Genre { Name = "Metal" },
                new Genre { Name = "Alternative" },
                new Genre { Name = "Disco" },
                new Genre { Name = "Blues" },
                new Genre { Name = "Latin" },
                new Genre { Name = "Reggae" },
                new Genre { Name = "Pop" },
                new Genre { Name = "Classical" }
            };

            for (int i = 0; i < genres.Count; i++)
            {
                genres[i].GenreId = i + 1;
            }

            var artists = new List<Artist>
            {
                new Artist { Name = "Aaron Copland & London Symphony Orchestra" },
                new Artist { Name = "Aaron Goldberg" },
                new Artist { Name = "AC/DC" },
                new Artist { Name = "Accept" },
                new Artist { Name = "Adrian Leaper & Doreen de Feis" },
                new Artist { Name = "Aerosmith" },
                new Artist { Name = "Aisha Duo" },
                new Artist { Name = "Alanis Morissette" },
                new Artist { Name = "Alberto Turco & Nova Schola Gregoriana" },
                new Artist { Name = "Alice In Chains" },
                new Artist { Name = "Amy Winehouse" },
                new Artist { Name = "Anita Ward" },
                new Artist { Name = "Antônio Carlos Jobim" },
                new Artist { Name = "Apocalyptica" },
                new Artist { Name = "Audioslave" },
                new Artist { Name = "Barry Wordsworth & BBC Concert Orchestra" },
                new Artist { Name = "Berliner Philharmoniker & Hans Rosbaud" },
                new Artist { Name = "Berliner Philharmoniker & Herbert Von Karajan" },
                new Artist { Name = "Billy Cobham" },
                new Artist { Name = "Black Label Society" },
                new Artist { Name = "Black Sabbath" },
                new Artist { Name = "Boston Symphony Orchestra & Seiji Ozawa" },
                new Artist { Name = "Britten Sinfonia, Ivor Bolton & Lesley Garrett" },
                new Artist { Name = "Bruce Dickinson" },
                new Artist { Name = "Buddy Guy" },
                new Artist { Name = "Caetano Veloso" },
                new Artist { Name = "Cake" },
                new Artist { Name = "Calexico" },
                new Artist { Name = "Cássia Eller" },
                new Artist { Name = "Chic" },
                new Artist { Name = "Chicago Symphony Orchestra & Fritz Reiner" },
                new Artist { Name = "Chico Buarque" },
                new Artist { Name = "Chico Science & Nação Zumbi" },
                new Artist { Name = "Choir Of Westminster Abbey & Simon Preston" },
                new Artist { Name = "Chris Cornell" },
                new Artist { Name = "Christopher O'Riley" },
                new Artist { Name = "Cidade Negra" },
                new Artist { Name = "Cláudio Zoli" },
                new Artist { Name = "Creedence Clearwater Revival" },
                new Artist { Name = "David Coverdale" },
                new Artist { Name = "Deep Purple" },
                new Artist { Name = "Dennis Chambers" },
                new Artist { Name = "Djavan" },
                new Artist { Name = "Donna Summer" },
                new Artist { Name = "Dread Zeppelin" },
                new Artist { Name = "Ed Motta" },
                new Artist { Name = "Edo de Waart & San Francisco Symphony" },
                new Artist { Name = "Elis Regina" },
                new Artist { Name = "English Concert & Trevor Pinnock" },
                new Artist { Name = "Eric Clapton" },
                new Artist { Name = "Eugene Ormandy" },
                new Artist { Name = "Faith No More" },
                new Artist { Name = "Falamansa" },
                new Artist { Name = "Foo Fighters" },
                new Artist { Name = "Frank Zappa & Captain Beefheart" },
                new Artist { Name = "Fretwork" },
                new Artist { Name = "Funk Como Le Gusta" },
                new Artist { Name = "Gerald Moore" },
                new Artist { Name = "Gilberto Gil" },
                new Artist { Name = "Godsmack" },
                new Artist { Name = "Gonzaguinha" },
                new Artist { Name = "Göteborgs Symfoniker & Neeme Järvi" },
                new Artist { Name = "Guns N' Roses" },
                new Artist { Name = "Gustav Mahler" },
                new Artist { Name = "Incognito" },
                new Artist { Name = "Iron Maiden" },
                new Artist { Name = "James Levine" },
                new Artist { Name = "Jamiroquai" },
                new Artist { Name = "Jimi Hendrix" },
                new Artist { Name = "Joe Satriani" },
                new Artist { Name = "Jorge Ben" },
                new Artist { Name = "Jota Quest" },
                new Artist { Name = "Judas Priest" },
                new Artist { Name = "Julian Bream" },
                new Artist { Name = "Kent Nagano and Orchestre de l'Opéra de Lyon" },
                new Artist { Name = "Kiss" },
                new Artist { Name = "Led Zeppelin" },
                new Artist { Name = "Legião Urbana" },
                new Artist { Name = "Lenny Kravitz" },
                new Artist { Name = "Les Arts Florissants & William Christie" },
                new Artist { Name = "London Symphony Orchestra & Sir Charles Mackerras" },
                new Artist { Name = "Luciana Souza/Romero Lubambo" },
                new Artist { Name = "Lulu Santos" },
                new Artist { Name = "Marcos Valle" },
                new Artist { Name = "Marillion" },
                new Artist { Name = "Marisa Monte" },
                new Artist { Name = "Martin Roscoe" },
                new Artist { Name = "Maurizio Pollini" },
                new Artist { Name = "Mela Tenenbaum, Pro Musica Prague & Richard Kapp" },
                new Artist { Name = "Men At Work" },
                new Artist { Name = "Metallica" },
                new Artist { Name = "Michael Tilson Thomas & San Francisco Symphony" },
                new Artist { Name = "Miles Davis" },
                new Artist { Name = "Milton Nascimento" },
                new Artist { Name = "Mötley Crüe" },
                new Artist { Name = "Motörhead" },
                new Artist { Name = "Nash Ensemble" },
                new Artist { Name = "Nicolaus Esterhazy Sinfonia" },
                new Artist { Name = "Nirvana" },
                new Artist { Name = "O Terço" },
                new Artist { Name = "Olodum" },
                new Artist { Name = "Orchestra of The Age of Enlightenment" },
                new Artist { Name = "Os Paralamas Do Sucesso" },
                new Artist { Name = "Ozzy Osbourne" },
                new Artist { Name = "Page & Plant" },
                new Artist { Name = "Paul D'Ianno" },
                new Artist { Name = "Pearl Jam" },
                new Artist { Name = "Pink Floyd" },
                new Artist { Name = "Queen" },
                new Artist { Name = "R.E.M." },
                new Artist { Name = "Raul Seixas" },
                new Artist { Name = "Red Hot Chili Peppers" },
                new Artist { Name = "Roger Norrington, London Classical Players" },
                new Artist { Name = "Royal Philharmonic Orchestra & Sir Thomas Beecham" },
                new Artist { Name = "Rush" },
                new Artist { Name = "Santana" },
                new Artist { Name = "Scholars Baroque Ensemble" },
                new Artist { Name = "Scorpions" },
                new Artist { Name = "Sergei Prokofiev & Yuri Temirkanov" },
                new Artist { Name = "Sir Georg Solti & Wiener Philharmoniker" },
                new Artist { Name = "Skank" },
                new Artist { Name = "Soundgarden" },
                new Artist { Name = "Spyro Gyra" },
                new Artist { Name = "Stevie Ray Vaughan & Double Trouble" },
                new Artist { Name = "Stone Temple Pilots" },
                new Artist { Name = "System Of A Down" },
                new Artist { Name = "Temple of the Dog" },
                new Artist { Name = "Terry Bozzio, Tony Levin & Steve Stevens" },
                new Artist { Name = "The 12 Cellists of The Berlin Philharmonic" },
                new Artist { Name = "The Black Crowes" },
                new Artist { Name = "The Cult" },
                new Artist { Name = "The Doors" },
                new Artist { Name = "The King's Singers" },
                new Artist { Name = "The Police" },
                new Artist { Name = "The Posies" },
                new Artist { Name = "The Rolling Stones" },
                new Artist { Name = "The Who" },
                new Artist { Name = "Tim Maia" },
                new Artist { Name = "Ton Koopman" },
                new Artist { Name = "U2" },
                new Artist { Name = "UB40" },
                new Artist { Name = "Van Halen" },
                new Artist { Name = "Various Artists" },
                new Artist { Name = "Velvet Revolver" },
                new Artist { Name = "Vinícius De Moraes" },
                new Artist { Name = "Wilhelm Kempff" },
                new Artist { Name = "Yehudi Menuhin" },
                new Artist { Name = "Yo-Yo Ma" },
                new Artist { Name = "Zeca Pagodinho" }
            };

            for (int i = 0; i < artists.Count; i++)
            {
                artists[i].ArtistId = i + 1;
            }

            var albums = new List<Album>
            {
                new Album { Title = "The Best Of Men At Work", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Men At Work").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "A Copland Celebration, Vol. I", GenreId = genres.Single(g => g.Name == "Classical").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Aaron Copland & London Symphony Orchestra").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Worlds", GenreId = genres.Single(g => g.Name == "Jazz").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Aaron Goldberg").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "For Those About To Rock We Salute You", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "AC/DC").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Let There Be Rock", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "AC/DC").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Balls to the Wall", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Accept").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Restless and Wild", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Accept").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Górecki: Symphony No. 3", GenreId = genres.Single(g => g.Name == "Classical").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Adrian Leaper & Doreen de Feis").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Big Ones", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Aerosmith").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Quiet Songs", GenreId = genres.Single(g => g.Name == "Jazz").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Aisha Duo").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Jagged Little Pill", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Alanis Morissette").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Facelift", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Alice In Chains").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Frank", GenreId = genres.Single(g => g.Name == "Pop").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Amy Winehouse").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Ring My Bell", GenreId = genres.Single(g => g.Name == "Disco").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Anita Ward").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Chill: Brazil (Disc 2)", GenreId = genres.Single(g => g.Name == "Latin").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Antônio Carlos Jobim").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Warner 25 Anos", GenreId = genres.Single(g => g.Name == "Jazz").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Antônio Carlos Jobim").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Plays Metallica By Four Cellos", GenreId = genres.Single(g => g.Name == "Metal").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Apocalyptica").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Revelations", GenreId = genres.Single(g => g.Name == "Alternative").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Audioslave").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Audioslave", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Audioslave").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "The Last Night of the Proms", GenreId = genres.Single(g => g.Name == "Classical").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Barry Wordsworth & BBC Concert Orchestra").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Sibelius: Finlandia", GenreId = genres.Single(g => g.Name == "Classical").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Berliner Philharmoniker & Hans Rosbaud").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Mozart: Symphonies Nos. 40 & 41", GenreId = genres.Single(g => g.Name == "Classical").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Berliner Philharmoniker & Herbert Von Karajan").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "The Best Of Billy Cobham", GenreId = genres.Single(g => g.Name == "Jazz").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Billy Cobham").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Alcohol Fueled Brewtality Live! [Disc 1]", GenreId = genres.Single(g => g.Name == "Metal").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Black Label Society").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Alcohol Fueled Brewtality Live! [Disc 2]", GenreId = genres.Single(g => g.Name == "Metal").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Black Label Society").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Black Sabbath Vol. 4 (Remaster)", GenreId = genres.Single(g => g.Name == "Metal").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Black Sabbath").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Black Sabbath", GenreId = genres.Single(g => g.Name == "Metal").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Black Sabbath").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Carmina Burana", GenreId = genres.Single(g => g.Name == "Classical").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Boston Symphony Orchestra & Seiji Ozawa").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "A Soprano Inspired", GenreId = genres.Single(g => g.Name == "Classical").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Britten Sinfonia, Ivor Bolton & Lesley Garrett").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Chemical Wedding", GenreId = genres.Single(g => g.Name == "Metal").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Bruce Dickinson").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Prenda Minha", GenreId = genres.Single(g => g.Name == "Latin").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Caetano Veloso").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Sozinho Remix Ao Vivo", GenreId = genres.Single(g => g.Name == "Latin").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Caetano Veloso").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Cake: B-Sides and Rarities", GenreId = genres.Single(g => g.Name == "Alternative").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Cake").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Carried to Dust (Bonus Track Version)", GenreId = genres.Single(g => g.Name == "Alternative").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Calexico").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Cássia Eller - Sem Limite [Disc 1]", GenreId = genres.Single(g => g.Name == "Latin").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Cássia Eller").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Le Freak", GenreId = genres.Single(g => g.Name == "Disco").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Chic").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Scheherazade", GenreId = genres.Single(g => g.Name == "Classical").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Chicago Symphony Orchestra & Fritz Reiner").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Minha Historia", GenreId = genres.Single(g => g.Name == "Latin").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Chico Buarque").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Afrociberdelia", GenreId = genres.Single(g => g.Name == "Latin").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Chico Science & Nação Zumbi").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Da Lama Ao Caos", GenreId = genres.Single(g => g.Name == "Latin").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Chico Science & Nação Zumbi").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Carry On", GenreId = genres.Single(g => g.Name == "Alternative").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Chris Cornell").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "SCRIABIN: Vers la flamme", GenreId = genres.Single(g => g.Name == "Classical").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Christopher O'Riley").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Acústico MTV [Live]", GenreId = genres.Single(g => g.Name == "Reggae").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Cidade Negra").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Cidade Negra - Hits", GenreId = genres.Single(g => g.Name == "Reggae").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Cidade Negra").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Na Pista", GenreId = genres.Single(g => g.Name == "Latin").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Cláudio Zoli").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Chronicle, Vol. 1", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Creedence Clearwater Revival").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Chronicle, Vol. 2", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Creedence Clearwater Revival").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Into The Light", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "David Coverdale").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Come Taste The Band", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Deep Purple").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Deep Purple In Rock", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Deep Purple").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Fireball", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Deep Purple").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Machine Head", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Deep Purple").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "MK III The Final Concerts [Disc 1]", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Deep Purple").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Purpendicular", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Deep Purple").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Slaves And Masters", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Deep Purple").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Stormbringer", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Deep Purple").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "The Battle Rages On", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Deep Purple").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "The Final Concerts (Disc 2)", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Deep Purple").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Outbreak", GenreId = genres.Single(g => g.Name == "Jazz").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Dennis Chambers").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Djavan Ao Vivo - Vol. 02", GenreId = genres.Single(g => g.Name == "Latin").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Djavan").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Djavan Ao Vivo - Vol. 1", GenreId = genres.Single(g => g.Name == "Latin").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Djavan").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "MacArthur Park Suite", GenreId = genres.Single(g => g.Name == "Disco").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Donna Summer").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Un-Led-Ed", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Dread Zeppelin").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "The Best of Ed Motta", GenreId = genres.Single(g => g.Name == "Latin").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Ed Motta").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Adams, John: The Chairman Dances", GenreId = genres.Single(g => g.Name == "Classical").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Edo de Waart & San Francisco Symphony").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Elis Regina-Minha História", GenreId = genres.Single(g => g.Name == "Latin").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Elis Regina").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Pachelbel: Canon & Gigue", GenreId = genres.Single(g => g.Name == "Classical").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "English Concert & Trevor Pinnock").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Unplugged", GenreId = genres.Single(g => g.Name == "Latin").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Eric Clapton").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "The Cream Of Clapton", GenreId = genres.Single(g => g.Name == "Blues").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Eric Clapton").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Unplugged", GenreId = genres.Single(g => g.Name == "Blues").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Eric Clapton").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Respighi:Pines of Rome", GenreId = genres.Single(g => g.Name == "Classical").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Eugene Ormandy").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Strauss: Waltzes", GenreId = genres.Single(g => g.Name == "Classical").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Eugene Ormandy").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "King For A Day Fool For A Lifetime", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Faith No More").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Deixa Entrar", GenreId = genres.Single(g => g.Name == "Latin").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Falamansa").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "In Your Honor [Disc 1]", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Foo Fighters").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "In Your Honor [Disc 2]", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Foo Fighters").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "The Colour And The Shape", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Foo Fighters").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Bongo Fury", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Frank Zappa & Captain Beefheart").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Roda De Funk", GenreId = genres.Single(g => g.Name == "Latin").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Funk Como Le Gusta").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Quanta Gente Veio Ver (Live)", GenreId = genres.Single(g => g.Name == "Latin").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Gilberto Gil").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Quanta Gente Veio ver--Bônus De Carnaval", GenreId = genres.Single(g => g.Name == "Jazz").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Gilberto Gil").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Faceless", GenreId = genres.Single(g => g.Name == "Metal").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Godsmack").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Meus Momentos", GenreId = genres.Single(g => g.Name == "Latin").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Gonzaguinha").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Nielsen: The Six Symphonies", GenreId = genres.Single(g => g.Name == "Classical").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Göteborgs Symfoniker & Neeme Järvi").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Appetite for Destruction", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Guns N' Roses").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Use Your Illusion I", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Guns N' Roses").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Use Your Illusion II", GenreId = genres.Single(g => g.Name == "Metal").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Guns N' Roses").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Blue Moods", GenreId = genres.Single(g => g.Name == "Jazz").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Incognito").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "A Matter of Life and Death", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Iron Maiden").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Brave New World", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Iron Maiden").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Fear Of The Dark", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Iron Maiden").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Live At Donington 1992 (Disc 1)", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Iron Maiden").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Live At Donington 1992 (Disc 2)", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Iron Maiden").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Rock In Rio [CD2]", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Iron Maiden").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "The Number of The Beast", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Iron Maiden").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "The X Factor", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Iron Maiden").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Virtual XI", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Iron Maiden").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "A Real Dead One", GenreId = genres.Single(g => g.Name == "Metal").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Iron Maiden").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "A Real Live One", GenreId = genres.Single(g => g.Name == "Metal").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Iron Maiden").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Live After Death", GenreId = genres.Single(g => g.Name == "Metal").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Iron Maiden").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "No Prayer For The Dying", GenreId = genres.Single(g => g.Name == "Metal").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Iron Maiden").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Piece Of Mind", GenreId = genres.Single(g => g.Name == "Metal").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Iron Maiden").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Powerslave", GenreId = genres.Single(g => g.Name == "Metal").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Iron Maiden").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Rock In Rio [CD1]", GenreId = genres.Single(g => g.Name == "Metal").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Iron Maiden").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Rock In Rio [CD2]", GenreId = genres.Single(g => g.Name == "Metal").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Iron Maiden").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Seventh Son of a Seventh Son", GenreId = genres.Single(g => g.Name == "Metal").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Iron Maiden").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Somewhere in Time", GenreId = genres.Single(g => g.Name == "Metal").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Iron Maiden").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "The Number of The Beast", GenreId = genres.Single(g => g.Name == "Metal").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Iron Maiden").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Iron Maiden", GenreId = genres.Single(g => g.Name == "Blues").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Iron Maiden").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Mascagni: Cavalleria Rusticana", GenreId = genres.Single(g => g.Name == "Classical").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "James Levine").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Emergency On Planet Earth", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Jamiroquai").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Are You Experienced?", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Jimi Hendrix").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Surfing with the Alien (Remastered)", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Joe Satriani").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Jorge Ben Jor 25 Anos", GenreId = genres.Single(g => g.Name == "Latin").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Jorge Ben").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Jota Quest-1995", GenreId = genres.Single(g => g.Name == "Latin").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Jota Quest").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Living After Midnight", GenreId = genres.Single(g => g.Name == "Metal").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Judas Priest").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Weill: The Seven Deadly Sins", GenreId = genres.Single(g => g.Name == "Classical").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Kent Nagano and Orchestre de l'Opéra de Lyon").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Greatest Kiss", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Kiss").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Unplugged [Live]", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Kiss").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "BBC Sessions [Disc 1] [Live]", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Led Zeppelin").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "BBC Sessions [Disc 2] [Live]", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Led Zeppelin").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Coda", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Led Zeppelin").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Houses Of The Holy", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Led Zeppelin").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "In Through The Out Door", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Led Zeppelin").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "IV", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Led Zeppelin").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Led Zeppelin I", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Led Zeppelin").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Led Zeppelin II", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Led Zeppelin").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Led Zeppelin III", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Led Zeppelin").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Physical Graffiti [Disc 1]", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Led Zeppelin").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Physical Graffiti [Disc 2]", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Led Zeppelin").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Presence", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Led Zeppelin").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "The Song Remains The Same (Disc 1)", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Led Zeppelin").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "The Song Remains The Same (Disc 2)", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Led Zeppelin").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Mais Do Mesmo", GenreId = genres.Single(g => g.Name == "Latin").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Legião Urbana").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Greatest Hits", GenreId = genres.Single(g => g.Name == "Reggae").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Lenny Kravitz").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Greatest Hits", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Lenny Kravitz").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Greatest Hits", GenreId = genres.Single(g => g.Name == "Metal").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Lenny Kravitz").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Tchaikovsky: The Nutcracker", GenreId = genres.Single(g => g.Name == "Classical").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "London Symphony Orchestra & Sir Charles Mackerras").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Duos II", GenreId = genres.Single(g => g.Name == "Latin").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Luciana Souza/Romero Lubambo").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Chill: Brazil (Disc 1)", GenreId = genres.Single(g => g.Name == "Latin").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Marcos Valle").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Misplaced Childhood", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Marillion").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Barulhinho Bom", GenreId = genres.Single(g => g.Name == "Latin").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Marisa Monte").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Szymanowski: Piano Works, Vol. 1", GenreId = genres.Single(g => g.Name == "Classical").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Martin Roscoe").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "...And Justice For All", GenreId = genres.Single(g => g.Name == "Metal").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Metallica").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Black Album", GenreId = genres.Single(g => g.Name == "Metal").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Metallica").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Garage Inc. (Disc 1)", GenreId = genres.Single(g => g.Name == "Metal").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Metallica").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Garage Inc. (Disc 2)", GenreId = genres.Single(g => g.Name == "Metal").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Metallica").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Load", GenreId = genres.Single(g => g.Name == "Metal").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Metallica").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Master Of Puppets", GenreId = genres.Single(g => g.Name == "Metal").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Metallica").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "ReLoad", GenreId = genres.Single(g => g.Name == "Metal").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Metallica").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Ride The Lightning", GenreId = genres.Single(g => g.Name == "Metal").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Metallica").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "St. Anger", GenreId = genres.Single(g => g.Name == "Metal").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Metallica").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Berlioz: Symphonie Fantastique", GenreId = genres.Single(g => g.Name == "Classical").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Michael Tilson Thomas & San Francisco Symphony").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Prokofiev: Romeo & Juliet", GenreId = genres.Single(g => g.Name == "Classical").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Michael Tilson Thomas & San Francisco Symphony").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Miles Ahead", GenreId = genres.Single(g => g.Name == "Jazz").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Miles Davis").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "The Essential Miles Davis [Disc 1]", GenreId = genres.Single(g => g.Name == "Jazz").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Miles Davis").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "The Essential Miles Davis [Disc 2]", GenreId = genres.Single(g => g.Name == "Jazz").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Miles Davis").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Milton Nascimento Ao Vivo", GenreId = genres.Single(g => g.Name == "Latin").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Milton Nascimento").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Minas", GenreId = genres.Single(g => g.Name == "Latin").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Milton Nascimento").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Motley Crue Greatest Hits", GenreId = genres.Single(g => g.Name == "Metal").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Mötley Crüe").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Ace Of Spades", GenreId = genres.Single(g => g.Name == "Metal").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Motörhead").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Mozart: Chamber Music", GenreId = genres.Single(g => g.Name == "Classical").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Nash Ensemble").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "The Best of Beethoven", GenreId = genres.Single(g => g.Name == "Classical").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Nicolaus Esterhazy Sinfonia").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Nevermind", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Nirvana").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Compositores", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "O Terço").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Olodum", GenreId = genres.Single(g => g.Name == "Latin").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Olodum").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Bach: The Brandenburg Concertos", GenreId = genres.Single(g => g.Name == "Classical").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Orchestra of The Age of Enlightenment").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Acústico MTV", GenreId = genres.Single(g => g.Name == "Latin").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Os Paralamas Do Sucesso").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Arquivo II", GenreId = genres.Single(g => g.Name == "Latin").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Os Paralamas Do Sucesso").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Arquivo Os Paralamas Do Sucesso", GenreId = genres.Single(g => g.Name == "Latin").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Os Paralamas Do Sucesso").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Tribute", GenreId = genres.Single(g => g.Name == "Metal").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Ozzy Osbourne").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Bark at the Moon (Remastered)", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Ozzy Osbourne").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Blizzard of Ozz", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Ozzy Osbourne").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Diary of a Madman (Remastered)", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Ozzy Osbourne").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "No More Tears (Remastered)", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Ozzy Osbourne").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Speak of the Devil", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Ozzy Osbourne").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Walking Into Clarksdale", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Page & Plant").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "The Beast Live", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Paul D'Ianno").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Live On Two Legs [Live]", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Pearl Jam").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Riot Act", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Pearl Jam").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Ten", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Pearl Jam").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Vs.", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Pearl Jam").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Dark Side Of The Moon", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Pink Floyd").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Greatest Hits I", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Queen").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Greatest Hits II", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Queen").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "News Of The World", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Queen").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "New Adventures In Hi-Fi", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "R.E.M.").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Raul Seixas", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Raul Seixas").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "By The Way", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Red Hot Chili Peppers").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Californication", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Red Hot Chili Peppers").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Purcell: The Fairy Queen", GenreId = genres.Single(g => g.Name == "Classical").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Roger Norrington, London Classical Players").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Haydn: Symphonies 99 - 104", GenreId = genres.Single(g => g.Name == "Classical").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Royal Philharmonic Orchestra & Sir Thomas Beecham").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Retrospective I (1974-1980)", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Rush").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Santana - As Years Go By", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Santana").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Santana Live", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Santana").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Supernatural", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Santana").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Handel: The Messiah (Highlights)", GenreId = genres.Single(g => g.Name == "Classical").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Scholars Baroque Ensemble").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Prokofiev: Symphony No.1", GenreId = genres.Single(g => g.Name == "Classical").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Sergei Prokofiev & Yuri Temirkanov").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Wagner: Favourite Overtures", GenreId = genres.Single(g => g.Name == "Classical").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Sir Georg Solti & Wiener Philharmoniker").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Maquinarama", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Skank").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "O Samba Poconé", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Skank").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "A-Sides", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Soundgarden").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Heart of the Night", GenreId = genres.Single(g => g.Name == "Jazz").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Spyro Gyra").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Morning Dance", GenreId = genres.Single(g => g.Name == "Jazz").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Spyro Gyra").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "In Step", GenreId = genres.Single(g => g.Name == "Blues").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Stevie Ray Vaughan & Double Trouble").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Core", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Stone Temple Pilots").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Mezmerize", GenreId = genres.Single(g => g.Name == "Metal").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "System Of A Down").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Temple of the Dog", GenreId = genres.Single(g => g.Name == "Alternative").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Temple of the Dog").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "[1997] Black Light Syndrome", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Terry Bozzio, Tony Levin & Steve Stevens").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "South American Getaway", GenreId = genres.Single(g => g.Name == "Classical").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "The 12 Cellists of The Berlin Philharmonic").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Live [Disc 1]", GenreId = genres.Single(g => g.Name == "Blues").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "The Black Crowes").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Live [Disc 2]", GenreId = genres.Single(g => g.Name == "Blues").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "The Black Crowes").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Beyond Good And Evil", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "The Cult").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "The Doors", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "The Doors").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "English Renaissance", GenreId = genres.Single(g => g.Name == "Classical").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "The King's Singers").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "The Police Greatest Hits", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "The Police").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Every Kind of Light", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "The Posies").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Hot Rocks, 1964-1971 (Disc 1)", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "The Rolling Stones").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "No Security", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "The Rolling Stones").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Voodoo Lounge", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "The Rolling Stones").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "My Generation - The Very Best Of The Who", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "The Who").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Serie Sem Limite (Disc 1)", GenreId = genres.Single(g => g.Name == "Latin").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Tim Maia").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Serie Sem Limite (Disc 2)", GenreId = genres.Single(g => g.Name == "Latin").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Tim Maia").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Bach: Toccata & Fugue in D Minor", GenreId = genres.Single(g => g.Name == "Classical").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Ton Koopman").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Achtung Baby", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "U2").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "B-Sides 1980-1990", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "U2").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "How To Dismantle An Atomic Bomb", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "U2").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Pop", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "U2").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Rattle And Hum", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "U2").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "The Best Of 1980-1990", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "U2").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "War", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "U2").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Zooropa", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "U2").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "UB40 The Best Of - Volume Two [UK]", GenreId = genres.Single(g => g.Name == "Reggae").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "UB40").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Diver Down", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Van Halen").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "The Best Of Van Halen, Vol. I", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Van Halen").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Van Halen III", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Van Halen").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Van Halen", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Van Halen").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Axé Bahia 2001", GenreId = genres.Single(g => g.Name == "Pop").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Various Artists").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Sambas De Enredo 2001", GenreId = genres.Single(g => g.Name == "Latin").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Various Artists").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Vozes do MPB", GenreId = genres.Single(g => g.Name == "Latin").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Various Artists").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Contraband", GenreId = genres.Single(g => g.Name == "Rock").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Velvet Revolver").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Vinicius De Moraes", GenreId = genres.Single(g => g.Name == "Latin").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Vinícius De Moraes").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Bach: Goldberg Variations", GenreId = genres.Single(g => g.Name == "Classical").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Wilhelm Kempff").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Bartok: Violin & Viola Concertos", GenreId = genres.Single(g => g.Name == "Classical").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Yehudi Menuhin").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Bach: The Cello Suites", GenreId = genres.Single(g => g.Name == "Classical").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Yo-Yo Ma").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
                new Album { Title = "Ao Vivo [IMPORT]", GenreId = genres.Single(g => g.Name == "Latin").GenreId, Price = 8.99M, ArtistId = artists.Single(a => a.Name == "Zeca Pagodinho").ArtistId, AlbumArtUrl = "~/images/placeholder.gif" },
            };

            for (int i = 0; i < albums.Count; i++)
            {
                albums[i].AlbumId = i + 1;
            }

            builder.Entity<Genre>().HasData(genres);
            builder.Entity<Artist>().HasData(artists);
            builder.Entity<Album>().HasData(albums);
        }
    }
}